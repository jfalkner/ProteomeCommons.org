<project name="ProteomeCommons.org Science Community" default="dist" basedir=".">
    <description>This is the Ant build script for the ProteomeCommons.org Science Community.</description>
    
    <!-- Print out current date/time for log -->
    <tstamp>
      <format property="BUILD_TIME" pattern="MM/dd/yyyy hh:mm aa" />
    </tstamp>
    <echo message="Build on ${BUILD_TIME}" />
	
	<!-- Set the properties -->
	<property name="src" location="src"/>
	<property name="test" location="test"/>
    <property name="lib" location="lib"/>
	<property name="web" location="web"/>
    <property name="build" location="build"/>
    <property name="build.rt" location="${build}/rt"/>
	<property name="build.java" location="${build}/java"/>
	<property name="dist.website" location="${build}/website"/>
	<property name="dist.website.web-inf" location="${dist.website}/WEB-INF"/>
	<property name="dist.website.web-inf.lib" location="${dist.website.web-inf}/lib"/>
	<property file="build.properties" />
	
	<!-- path required for runtime compiling-->
    <path id="path.rt.compile">
        <!-- Add all the JARs required for runtime --> 
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>
	
	<!-- removes any temporary files created during the build -->
    <target name="clean" description="clean up" >
        <!-- Delete the ${build} and some stuff from ${dist} directory trees -->
        <delete dir="${build}"/>
		<delete file="build.xml~"/>
        <!-- tomcat makes this directory -->
        <delete dir="work"/>
        <!-- Delete the website.zip file, i.e. a release of the website -->
        <delete file="website.zip"/>
    </target>
	
	<!-- Initializes the build directories -->
    <target name="init" depends="clean">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
		<mkdir dir="${build.java}"/>
        <mkdir dir="${build.rt}"/>
		<mkdir dir="${dist.website}"/>
		<mkdir dir="${dist.website.web-inf}"/>
		<mkdir dir="${dist.website.web-inf.lib}"/>
    </target>
	
	<!-- Compiles all the code required for runtime -->
    <target name="rt.compile" depends="init" description="compile the source">
        <!-- copy all non-java files from test to dest dir -->
        <copy todir="${build.java}">
            <fileset dir="${src}"/>
        </copy>

        <!-- replace all placeholder tokens -->
        <replace includes="**/*.java" dir="${build.java}" token="@buildNumber" value="${buildNumber}" />
		<replace includes="**/*.java" dir="${build.java}" token="@baseURL" value="${baseURL}" />   
		<replace includes="**/*.java" dir="${build.java}" token="@baseDir" value="${baseDir}" />   

        <!-- compile all the code -->
        <javac destdir="${build.rt}" debug="true" source="1.5">
            <src path="${build.java}"/>
            <!-- include the runtime compile path -->
            <classpath refid="path.rt.compile"/>
        </javac>
        
        <!-- copy all non-java files from src to dest dir -->
		<copy todir="${build.rt}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>	
            </fileset>
        </copy>
		
		<!-- copy all supporting libraries to the WEB-INF library folder -->
        <copy todir="${dist.website.web-inf.lib}">
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </copy>
		
        <!-- make a JAR representing the project's code -->
        <jar jarfile="ProteomeCommons.org.jar">
			<fileset dir="${build.rt}" includes="**/*.*"/>
		</jar>
    </target>
	
	<target name="includes" description="Includes the header and footer on pages.">
        <!-- compile the code -->
        <antcall target="rt.compile"/>
        
        <!-- copy all the plain files associated with the webapp -->
        <copy todir="${dist.website}">
            <fileset dir="${web}"/>
        </copy>

        <!-- replace all placeholder tokens -->
        <replace includes="**/*.html,**/*.java,**/*.js,**/*.jsp,**/*.css" dir="${dist.website}" token="@buildNumber" value="${buildNumber}" />
        
        <!-- dynamically add the URL to the website's base. helps make the buildfarm live -->
        <replace includes="**/*.html,**/*.java,**/*.js,**/*.jsp,**/*.css" dir="${dist.website}" token="@baseURL" value="${baseURL}" />  
		
		<replace includes="**/*.html,**/*.java,**/*.js,**/*.jsp,**/*.css" dir="${build.java}" token="@baseDir" value="${baseDir}" />     
	</target>
	
	<!-- set up the website -->
	<target name="dist.website" description="Makes a complete distribution of the website." >
        <!-- clean up -->
        <delete dir="${build.rt}"/>
        
        <!-- copy source files and do includes/token replacement -->
        <ant target="includes" />
        
        <!-- make a zip of the whole release -->
        <zip destfile="website.zip" basedir="${dist.website}" />
    </target>
</project>